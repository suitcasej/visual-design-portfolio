{"ast":null,"code":"var _jsxFileName = \"/Users/jordanhodges/Projects/Portfolio/Portfolio/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\"; // import { Link } from \"react-router-dom\";\n\nimport { HashLink } from \"react-router-hash-link\";\nimport { debounce } from \"../components/debounce\";\nimport ScrollToTop from \"../components/ScrollToTop.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar1 = () => {\n  _s();\n\n  const [prevScrollPos, setPrevScrollPos] = useState(0);\n  const [visible, setVisible] = useState(true);\n  const [expand, updateExpanded] = useState(false);\n  const [navColour, updateNavbar] = useState(false);\n  const scrollHandler = debounce(() => {\n    if (window.scrollY >= 20) {\n      updateNavbar(true);\n    } else {\n      updateNavbar(false);\n    }\n\n    const currentScrollPos = window.pageYOffset; // set state based on location info (explained in more detail below)\n\n    setVisible(prevScrollPos > currentScrollPos); // set state to new scroll position\n\n    setPrevScrollPos(currentScrollPos);\n  }, 1);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollHandler);\n    return () => window.removeEventListener(\"scroll\", scrollHandler);\n  }, [prevScrollPos, visible, expand, navColour, scrollHandler]);\n  const navbarStyles = {\n    position: \"fixed\",\n    width: \"100%\",\n    textAlign: \"center\",\n    // new:\n    transition: \"top 0.1s\"\n  };\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    style: { ...navbarStyles,\n      top: visible ? \"0\" : \"-60px\"\n    },\n    expanded: expand,\n    fixed: \"top\",\n    expand: \"lg\",\n    className: navColour ? \"sticky\" : \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"nav-container\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"/\",\n        className: \"nav-jordan\",\n        children: \"Jordan Hodges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"responsive-navbar-nav\",\n        onClick: () => {\n          updateExpanded(expand ? false : \"expanded\");\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"responsive-navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"justify-content-end\",\n          style: {\n            width: \"100%\"\n          },\n          defaultActiveKey: \"#home\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              as: HashLink,\n              className: \"nav-font\",\n              to: \"/#hero\",\n              onClick: () => updateExpanded(false),\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              className: \"nav-font\",\n              as: HashLink,\n              to: \"/#projects\",\n              onClick: () => updateExpanded(false),\n              children: \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              className: \"nav-font\",\n              as: HashLink,\n              to: \"/#about\",\n              onClick: (() => updateExpanded(false), window.scrollTo(0, document.body.scrollHeight)),\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar1, \"nsxx7BiyXC1zWtigo6b4zIu0yMw=\");\n\n_c = Navbar1;\nexport default Navbar1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar1\");","map":{"version":3,"sources":["/Users/jordanhodges/Projects/Portfolio/Portfolio/src/components/Navbar.js"],"names":["React","Component","useState","useEffect","Navbar","Nav","Container","Button","HashLink","debounce","ScrollToTop","Navbar1","prevScrollPos","setPrevScrollPos","visible","setVisible","expand","updateExpanded","navColour","updateNavbar","scrollHandler","window","scrollY","currentScrollPos","pageYOffset","addEventListener","removeEventListener","navbarStyles","position","width","textAlign","transition","top","scrollTo","document","body","scrollHeight"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\n// import { Link } from \"react-router-dom\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { debounce } from \"../components/debounce\";\nimport ScrollToTop from \"../components/ScrollToTop.js\";\n\nconst Navbar1 = () => {\n  const [prevScrollPos, setPrevScrollPos] = useState(0);\n  const [visible, setVisible] = useState(true);\n\n  const [expand, updateExpanded] = useState(false);\n  const [navColour, updateNavbar] = useState(false);\n\n  const scrollHandler = debounce(() => {\n    if (window.scrollY >= 20) {\n      updateNavbar(true);\n    } else {\n      updateNavbar(false);\n    }\n\n    const currentScrollPos = window.pageYOffset;\n\n    // set state based on location info (explained in more detail below)\n    setVisible(prevScrollPos > currentScrollPos);\n\n    // set state to new scroll position\n    setPrevScrollPos(currentScrollPos);\n  }, 1);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollHandler);\n\n    return () => window.removeEventListener(\"scroll\", scrollHandler);\n  }, [prevScrollPos, visible, expand, navColour, scrollHandler]);\n\n  const navbarStyles = {\n    position: \"fixed\",\n    width: \"100%\",\n    textAlign: \"center\",\n    // new:\n    transition: \"top 0.1s\",\n  };\n\n  return (\n    <Navbar\n      style={{ ...navbarStyles, top: visible ? \"0\" : \"-60px\" }}\n      expanded={expand}\n      fixed=\"top\"\n      expand=\"lg\"\n      className={navColour ? \"sticky\" : \"navbar\"}\n    >\n      <Container className=\"nav-container\">\n        <Navbar.Brand href=\"/\" className=\"nav-jordan\">\n          Jordan Hodges\n        </Navbar.Brand>\n        <Navbar.Toggle\n          aria-controls=\"responsive-navbar-nav\"\n          onClick={() => {\n            updateExpanded(expand ? false : \"expanded\");\n          }}\n        >\n          <span></span>\n          <span></span>\n          <span></span>\n        </Navbar.Toggle>\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav\n            className=\"justify-content-end\"\n            style={{ width: \"100%\" }}\n            defaultActiveKey=\"#home\"\n          >\n            <Nav.Item>\n              <Nav.Link\n                as={HashLink}\n                className=\"nav-font\"\n                to=\"/#hero\"\n                onClick={() => updateExpanded(false)}\n              >\n                Home\n              </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item>\n              <Nav.Link\n                className=\"nav-font\"\n                as={HashLink}\n                to=\"/#projects\"\n                onClick={() => updateExpanded(false)}\n              >\n                Projects\n              </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item>\n              <Nav.Link\n                className=\"nav-font\"\n                as={HashLink}\n                to=\"/#about\"\n                onClick={\n                  (() => updateExpanded(false),\n                  window.scrollTo(0, document.body.scrollHeight))\n                }\n              >\n                About\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Navbar1;\n"]},"metadata":{},"sourceType":"module"}